name: cndi
on:
  push:
    branches:
      - main
      - 'releases/**'
jobs:
  cndi-run:
    runs-on: ubuntu-20.04
    steps:
      - name: welcome
        run: echo "welcome to cndi!"

      - name: create working directory
        run: mkdir -p $HOME/.cndi/.working && sudo chmod -R 777 $HOME/.cndi

      - name: pull existing state
        run: curl --fail --create-dirs https://raw.githubusercontent.com/${{ github.repository }}/_state/state.json --output ~/.cndi/.working || mkdir -p $HOME/.cndi/.working && echo '{"nodes":[]}' | tee $HOME/.cndi/.working/state.json

      - name: make state readable
        run: sudo chmod 777 $HOME/.cndi/.working/state.json

      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: validate-nodes
        uses: johnstonmatt/is-valid-json-action@v.1.2.1
        with:
          path-to-file: cndi/nodes.json

      - name: setup cndi
        uses: polyseam/setup-cndi@1.0.3
        with:
          version: main

      - name: cndi chmod
        run: chmod +x bin/cndi # make cndi cli executable

      - name: cndi install
        run: bin/cndi install # run 'cndi install'

      # this next step is the core of the workflow
      - name: cndi run
        env:
          GIT_REPO:  https://github.com/${{ github.repository}}
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: bin/cndi run  # run 'cndi run'
        
        # work is done, let's do some hacky stuff to persist state
      - name: make state readable
        run: sudo chmod 777 $HOME/.cndi/.working/state.json

      - name: display final state
        run: echo "$(cat $HOME/.cndi/.working/state.json)"

      - name: validate-state
        uses: johnstonmatt/is-valid-json-action@v.1.2.1
        with:
          path-to-file: ~/.cndi/.working/state.json

      - name: remove repo contents
        run: git rm -r .

      - name: assess damages
        run: git status

      - name: copy state
        run: 'mv ~/.cndi/.working/state.json .'

      - name: persist-state
        uses: EndBug/add-and-commit@v9
        with:
          new_branch: _state
          push: origin _state --set-upstream --force
          add: state.json
          commiter_name: CNDI Bot
